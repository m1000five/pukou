DECLARE ExcelLineNumCommon SHARED INTEGER 0;
DECLARE ExcelSwatchLineCount SHARED INTEGER 10;
DECLARE ExcelXMLSwatchCommon SHARED CHARACTER ;


CREATE COMPUTE MODULE ReadExcelSwatchCommon_ComputeLine
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN 
		-- 记录数统计
		SET ExcelLineNumCommon =CARDINALITY(InputRoot.XML.workbook.sheet[1].row[]);			
		-- 循环取10行或者取到末尾
		DECLARE I INTEGER 1;
		DECLARE J INTEGER 1;
		DECLARE XMLLine CHARACTER;
		DECLARE CellNum INTEGER 0;				

		SET ExcelXMLSwatchCommon = '<ROOT>';

		WHILE (I <= SwatchLineCount AND I <= ExcelLineNumCommon) DO
			SET J=1;
			SET CellNum = CARDINALITY(InputRoot.XML.workbook.sheet[1].row[I].cell[]);
			SET XMLLine = '<ROWSET>';
			WHILE (J <= CellNum) DO
				IF (InputRoot.XML.workbook.sheet[1].row[I].cell[J] IS NULL or InputRoot.XML.workbook.sheet[1].row[I].cell[J] = '' ) THEN
					SET XMLLine = XMLLine ||'<COL></COL>';
				ELSE
					SET XMLLine = XMLLine || '<COL>' || InputRoot.XML.workbook.sheet[1].row[I].cell[J] || '</COL>';
				END IF;
				SET J = J+1;
			END WHILE;			

			SET I=I+1;			

			SET XMLLine = XMLLine || '</ROWSET>';
			SET ExcelXMLSwatchCommon=ExcelXMLSwatchCommon || XMLLine;			
			

		END WHILE;
		SET ExcelXMLSwatchCommon = ExcelXMLSwatchCommon || '</ROOT>';
		
		-- update t_filepreview
		DECLARE updateSql CHARACTER;
		set updateSql = 'UPDATE   t_filepreview SET  xml_target = ? WHERE  UPLOADNAME = ?';
		passthru updateSql to Database.orcl values(ExcelXMLSwatchCommon ,
				InputLocalEnvironment.File.Name );		

		RETURN TRUE;
	END;
 
END MODULE;


CREATE COMPUTE MODULE ReadExcelSwatchCommon_ComputeEOF
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
