Declare Total SHARED INTEGER 0;



CREATE COMPUTE MODULE jsxyTxtToXmlFlow_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		DECLARE table_sql CHARACTER;
		DECLARE table_data ROW;
		
		
		
		SET Total = Total + 1;
		
		IF Total = 1 THEN
			SET OutputLocalEnvironment.Variables.TIME = CURRENT_TIMESTAMP;
			SET OutputLocalEnvironment.Variables.TYPE = '信息';
			SET OutputLocalEnvironment.Variables.PROCESS = '流程3';
			SET OutputLocalEnvironment.Variables.FILE = InputLocalEnvironment.File.Name;
			SET OutputLocalEnvironment.Variables.AUDIT = '';
			SET OutputLocalEnvironment.Variables.NOTES = '文件读取开始';
		--	return true;
			PROPAGATE;
		END IF;
		
		
		-- GET RECORD
		DECLARE A1 CHARACTER;
		DECLARE A2 CHARACTER;
		DECLARE A3 CHARACTER;
		DECLARE A4 CHARACTER;
		DECLARE A5 CHARACTER;
		DECLARE A6 CHARACTER;
		DECLARE A7 CHARACTER;
		DECLARE A8 CHARACTER;
		DECLARE A9 CHARACTER;
		DECLARE A10 CHARACTER;
		DECLARE A11 CHARACTER;
		DECLARE A12 CHARACTER;
		DECLARE A13 CHARACTER;
		DECLARE A14 CHARACTER;
		DECLARE A15 CHARACTER;
		
		
		
		-- SET RECORD
		SET A1 = TRIM('"' FROM InputRoot.MRM.Record.A1);
		SET A2 = TRIM('"' FROM InputRoot.MRM.Record.A2);
		SET A3 = TRIM('"' FROM InputRoot.MRM.Record.A3);
		SET A4 = TRIM('"' FROM InputRoot.MRM.Record.A4);
		SET A5 = TRIM('"' FROM InputRoot.MRM.Record.A5);
		SET A6 = TRIM('"' FROM InputRoot.MRM.Record.A6);
		SET A7 = TRIM('"' FROM InputRoot.MRM.Record.A7);
		SET A8 = TRIM('"' FROM InputRoot.MRM.Record.A8);
		SET A9 = TRIM('"' FROM InputRoot.MRM.Record.A9);
		SET A10 = TRIM('"' FROM InputRoot.MRM.Record.A10);
		SET A11 = TRIM('"' FROM InputRoot.MRM.Record.A11);
		SET A12 = TRIM('"' FROM InputRoot.MRM.Record.A12);
		SET A13 = TRIM('"' FROM InputRoot.MRM.Record.A13);
		SET A14 = TRIM('"' FROM InputRoot.MRM.Record.A14);
		SET A15 = TRIM('"' FROM InputRoot.MRM.Record.A15);
		--查找重复的数据、并记录重复的数量
		
		
		--如果是不重复的数据则插入数据库、并记录成功的数量
		
		--通过文件名称获取表名称
		SET table_sql='select * from t_table where messageid = (select messageid from t_filepreview where fileid=?)';
		
		declare test character;
		set test = SUBSTRING(InputLocalEnvironment.File.Name BEFORE '.');
		
		SET table_data.row[] = passthru(table_sql to Database.orcl values(SUBSTRING(InputLocalEnvironment.File.Name BEFORE '.')));
		
		DECLARE table_name CHARACTER;
		SET table_name = table_data.row[1].TABLENAME;
		
		DECLARE md5code CHARACTER;	--获取MD5CODE
		DECLARE md5code_data ROW;
		DECLARE md5code_sql CHARACTER;
		DECLARE guid CHARACTER;		--获取 GUID
		DECLARE guid_data ROW;
		DECLARE guid_sql CHARACTER;
		
		SET guid_sql = 'select sys_guid() as guid from dual';
		SET guid_data.row[] = passthru(guid_sql to Database.orcl);
		SET guid = guid_data.row[1].GUID;
		
		SET md5code_sql = 'SELECT MD5('||A2||') as md5 FROM DUAL';
		SET md5code_data.row[]=passthru(md5code_sql to Database.orcl);
		SET md5code = md5code_data.row[1].MD5;
		
		IF table_name = 'T_DISHUI_DJXX' THEN
			INSERT INTO Database.T_DISHUI_DJXX (RECID,BATCHNUM,FILECODE,SOURCENAME,LINENUM,CREATETIME,MD5CODE,ZZJGDM,QYMC,QYZCH,NSRSBH,HSFSDM,HSFSMC,ZY,JY,DJRQ,DJJGDM,DJJGMC) 
			       VALUES (guid,2009090001,'',InputLocalEnvironment.File.Name,Total,CURRENT_TIMESTAMP,md5code,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11);
	       RETURN TRUE;
		END IF;
		IF table_name = 'T_DISHUI_ZXXX' THEN
			INSERT INTO Database.T_DISHUI_ZXXX (RECID,BATCHNUM,FILECODE,SOURCENAME,LINENUM,CREATETIME,MD5CODE,ZZJGDM,QYMC,QYZCH,NSRSBH,ZXLXDM,ZXLXMC,ZXYYDM,ZXYYMC,ZXRQ,ZXJGDM) 
			       VALUES (guid,2009090001,'',InputLocalEnvironment.File.Name,Total,CURRENT_TIMESTAMP,md5code,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10);
			RETURN TRUE;
		END IF;

		RETURN TRUE;
	END;



	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;


CREATE COMPUTE MODULE jsxyTxtToXmlFlow_Compute1
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		
		DECLARE dataNum_row ROW;
		DECLARE data_row ROW;
		DECLARE table_data ROW;
		DECLARE at1_sql CHARACTER;
		DECLARE data_Num INTEGER;
		DECLARE data_Num_sql CHARACTER;
		DECLARE i INTEGER 1;
		DECLARE table_sql CHARACTER;
		
		DECLARE table_name CHARACTER;
		
		SET table_sql='select * from t_table where messageid = (select messageid from t_filepreview where fileid=?)';
		
		SET table_data.row[] = passthru(table_sql to Database.orcl values(SUBSTRING(InputLocalEnvironment.File.Name BEFORE '.')));
		
		SET table_name = table_data.row[1].TABLENAME;
		
		IF table_name = 'T_DISHUI_DJXX' THEN
			
			SET data_Num_sql = 'select count(*) as num from T_DISHUI_DJXX  where batchnum=2009090001 ';	--总数据的SQL
			SET at1_sql='select * from T_DISHUI_DJXX where batchnum=2009090001 ';		--取得数据的SQL
		
			SET dataNum_row.row[] = passthru(data_Num_sql to Database.orcl);	--获取总记录数
			SET data_Num = dataNum_row.row[1].NUM;
		
		
			IF data_Num = 0  then 
				throw user exception message 2951 values('从T_DISHUI_DJXX表中没有查询出对应的详细信息！');-- 这种情况基本上不会发生
			END IF;
			
			SET data_row.row[] = passthru(at1_sql to Database.orcl);
		
			WHILE i <= data_Num DO
				SET OutputRoot.XMLNSC.root.rowset.row[i].(XMLNSC.Attribute)num = i;
				SET OutputRoot.XMLNSC.root.rowset.row[i].RECID = data_row.row[i].RECID;
				SET OutputRoot.XMLNSC.root.rowset.row[i].BATCHNUM = data_row.row[i].BATCHNUM;
				SET OutputRoot.XMLNSC.root.rowset.row[i].FILECODE = data_row.row[i].FILECODE;
				SET OutputRoot.XMLNSC.root.rowset.row[i].SOURCENAME = data_row.row[i].SOURCENAME;
				SET OutputRoot.XMLNSC.root.rowset.row[i].LINENUM = data_row.row[i].LINENUM ;
				SET OutputRoot.XMLNSC.root.rowset.row[i].CREATETIME = data_row.row[i].CREATETIME ;
				SET OutputRoot.XMLNSC.root.rowset.row[i].MD5CODE = data_row.row[i].MD5CODE;
				SET OutputRoot.XMLNSC.root.rowset.row[i].ZZJGDM = data_row.row[i].ZZJGDM;
				SET OutputRoot.XMLNSC.root.rowset.row[i].QYMC = data_row.row[i].QYMC;
				SET OutputRoot.XMLNSC.root.rowset.row[i].QYZCH = data_row.row[i].QYZCH;
				SET OutputRoot.XMLNSC.root.rowset.row[i].NSRSBH = data_row.row[i].NSRSBH;
				SET OutputRoot.XMLNSC.root.rowset.row[i].HSFSDM = data_row.row[i].HSFSDM;
				SET OutputRoot.XMLNSC.root.rowset.row[i].HSFSMC = data_row.row[i].HSFSMC;
				SET OutputRoot.XMLNSC.root.rowset.row[i].ZY = data_row.row[i].ZY;
				SET OutputRoot.XMLNSC.root.rowset.row[i].JY = data_row.row[i].JY;
				SET OutputRoot.XMLNSC.root.rowset.row[i].DJRQ = data_row.row[i].DJRQ;
				SET OutputRoot.XMLNSC.root.rowset.row[i].DJJGDM = data_row.row[i].DJJGDM;
				SET OutputRoot.XMLNSC.root.rowset.row[i].DJJGMC = data_row.row[i].DJJGMC;
				
				SET i = i+1;
			END WHILE;
			
			
		END IF;
		
		IF table_name = 'T_DISHUI_ZXXX' THEN
			
			SET data_Num_sql = 'select count(*) as num from T_DISHUI_ZXXX  where batchnum=2009090001  ';	--总数据的SQL
			SET at1_sql='select * from T_DISHUI_ZXXX where batchnum=2009090001 ';		--取得数据的SQL
		
			SET dataNum_row.row[] = passthru(data_Num_sql to Database.orcl);	--获取总记录数
			SET data_Num = dataNum_row.row[1].NUM;
		
		
			IF data_Num = 0  then 
				throw user exception message 2951 values('从T_DISHUI_ZXXX表中没有查询出对应的详细信息！');-- 这种情况基本上不会发生
			END IF;
		
			SET data_row.row[] = passthru(at1_sql to Database.orcl);
		
			WHILE i <= data_Num DO
				SET OutputRoot.XMLNSC.root.rowset.row[i].(XMLNSC.Attribute)num = i;
				SET OutputRoot.XMLNSC.root.rowset.row[i].RECID = data_row.row[i].RECID;
				SET OutputRoot.XMLNSC.root.rowset.row[i].BATCHNUM = data_row.row[i].BATCHNUM;
				SET OutputRoot.XMLNSC.root.rowset.row[i].FILECODE = data_row.row[i].FILECODE;
				SET OutputRoot.XMLNSC.root.rowset.row[i].SOURCENAME = data_row.row[i].SOURCENAME;
				SET OutputRoot.XMLNSC.root.rowset.row[i].LINENUM = data_row.row[i].LINENUM ;
				SET OutputRoot.XMLNSC.root.rowset.row[i].CREATETIME = data_row.row[i].CREATETIME ;
				SET OutputRoot.XMLNSC.root.rowset.row[i].MD5CODE = data_row.row[i].MD5CODE;
				SET OutputRoot.XMLNSC.root.rowset.row[i].ZZJGDM = data_row.row[i].ZZJGDM;
				SET OutputRoot.XMLNSC.root.rowset.row[i].QYMC = data_row.row[i].QYMC;
				SET OutputRoot.XMLNSC.root.rowset.row[i].QYZCH = data_row.row[i].QYZCH;
				SET OutputRoot.XMLNSC.root.rowset.row[i].NSRSBH = data_row.row[i].NSRSBH;
				SET OutputRoot.XMLNSC.root.rowset.row[i].ZXLXDM = data_row.row[i].ZXLXDM;
				SET OutputRoot.XMLNSC.root.rowset.row[i].ZXLXMC = data_row.row[i].ZXLXMC;
				SET OutputRoot.XMLNSC.root.rowset.row[i].ZXYYDM = data_row.row[i].ZXYYDM;
				SET OutputRoot.XMLNSC.root.rowset.row[i].ZXYYMC = data_row.row[i].ZXYYMC;
				SET OutputRoot.XMLNSC.root.rowset.row[i].ZXRQ = data_row.row[i].ZXRQ;
				SET OutputRoot.XMLNSC.root.rowset.row[i].ZXJGDM = data_row.row[i].ZXJGDM;			
				SET i = i+1;
			END WHILE;
		END IF;
		PROPAGATE TO TERMINAL 'out';
		
		SET OutputLocalEnvironment.Variables.TIME = CURRENT_TIMESTAMP;
		SET OutputLocalEnvironment.Variables.TYPE = '信息';
		SET OutputLocalEnvironment.Variables.PROCESS = '表数据去重';
		SET OutputLocalEnvironment.Variables.FILE = 'D:\xml\1.xml';
		SET OutputLocalEnvironment.Variables.AUDIT = '总共记录数目:'||CAST(Total AS CHARACTER)||',去重后的记录数:'||CAST(100 AS CHARACTER);
		SET OutputLocalEnvironment.Variables.NOTES = '去重成功、文件读取结束';
		PROPAGATE TO TERMINAL 'out1';
		
		--CALL CopyEntireMessage();
		
		PROPAGATE TO TERMINAL 'out2';
		
		SET Total=0;
		
		RETURN FALSE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
	
	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;
END MODULE;
