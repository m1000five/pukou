
Declare TotalRecord SHARED INTEGER 0;
CREATE COMPUTE MODULE txtTest_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		SET TotalRecord = TotalRecord + 1;
		IF TotalRecord > 20 THEN
			RETURN FALSE;
		END IF;
		
		SET Environment.Variables.Records.Record[TotalRecord].ZZJGDM = InputRoot.MRM.Record.ZZJGDM;
		SET Environment.Variables.Records.Record[TotalRecord].QYMC = InputRoot.MRM.Record.QYMC;
		SET Environment.Variables.Records.Record[TotalRecord].KSRQ = InputRoot.MRM.Record.KSRQ;
		SET Environment.Variables.Records.Record[TotalRecord].JZRQ = InputRoot.MRM.Record.JZRQ;
		SET Environment.Variables.Records.Record[TotalRecord].ZCZJ = InputRoot.MRM.Record.ZCZJ;
		SET Environment.Variables.Records.Record[TotalRecord].FDDBR = InputRoot.MRM.Record.FDDBR;
		SET Environment.Variables.Records.Record[TotalRecord].ZJLX = InputRoot.MRM.Record.ZJLX;
--		SET OutputRoot.XMLNSC.Records.ZZJGDM = TRIM('"' FROM InputRoot.MRM.Record.ZZJGDM);
--		SET OutputRoot.XMLNSC.Records.QYMC = TRIM('"' FROM InputRoot.MRM.Record.QYMC);
--		SET OutputRoot.XMLNSC.Records.KSRQ = TRIM('"' FROM InputRoot.MRM.Record.KSRQ);
--		SET OutputRoot.XMLNSC.Records.JZRQ  = TRIM('"' FROM InputRoot.MRM.Record.JZRQ);
--		SET OutputRoot.XMLNSC.Records.ZCZJ = TRIM('"' FROM InputRoot.MRM.Record.ZCZJ);
--		SET OutputRoot.XMLNSC.Records.FDDBR = TRIM('"' FROM InputRoot.MRM.Record.FDDBR);
--		SET OutputRoot.XMLNSC.Records.ZJLX = TRIM('"' FROM InputRoot.MRM.Record.ZJLX);
--		SET OutputLocalEnvironment.Destination.File.Name = 'xxx.xml';
--		PROPAGATE;
		
		IF TotalRecord = 20 THEN
			SET OutputLocalEnvironment.Destination.File.Name = 'xxx.xml';
			PROPAGATE TO TERMINAl 'out1';
		END IF;
		RETURN FALSE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;


CREATE COMPUTE MODULE txtTest_Compute1
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		SET TotalRecord = 0;
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
