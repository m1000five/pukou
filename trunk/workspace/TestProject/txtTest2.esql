DECLARE XMLOriginal SHARED CHARACTER '<Root>';
DECLARE XMLNew SHARED CHARACTER '<Root>';
DECLARE RecordCount SHARED Integer 0;

CREATE COMPUTE MODULE txtTest2_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		
		--判定是否是第20条记录
		IF RecordCount = 20 THEN
			RETURN FALSE;
		END IF;
		
		DECLARE str CHARACTER;
		--得到读取得一条记录
		SET str = InputRoot.MRM.Record.ZZJGDM;
		
		--判定是否包含规定的定界符号,如果含有||，则为此次为标准
		-- 否则为非标准
		IF CONTAINS(str,'||') = FALSE THEN
			RETURN FALSE;
		END IF;
		
		--记录数统计
		SET RecordCount = RecordCount + 1;
		
		--按照定界符循环处理读取记录
		DECLARE i INTEGER 1;
		WHILE CONTAINS(str,'||') DO
			SET OutputRoot.XMLNSC.RECORD.COL[i] = SUBSTRING(str BEFORE '||');
			SET str = SUBSTRING(str AFTER '||');
			SET i = i + 1;
		END WHILE;
		
		--得到记录的总列数
		DECLARE ColNum INTEGER;
		SET ColNum = CARDINALITY(OutputRoot.XMLNSC.RECORD.COL[]);
		
		--生成原始数据XML消息
		SET i = 1;
		WHILE i <= ColNum DO
			SET XMLOriginal = XMLOriginal||'<COL>'||OutputRoot.XMLNSC.RECORD.COL[i]||'</COL>';
			SET i= i+1;
		END WHILE;
		
		--生成更新数据XML消息
		--a.读取字段名以及对应的列号
		SET Environment.Variables.Order[]= (SELECT B.COLNAME, A.OrderID FROM A, B WHERE A.COLID = B.COLID);
		--b.得到要求更新的总记录数
		SET ColNum = CARDINALITY(Environment.Variables.Order[]);
		--c.生成更新的XML消息
		DECLARE j INTEGER;
		SET i = 1;
		WHILE i <= ColNum DO
			SET j = Environment.Variables.Order[i].OrderID;
			SET XMLNew = XMLNew||'<'||Environment.Variables.Order[i].COLNAME||'>'||
						OutputRoot.XMLNSC.RECORD.COL[j]||'</'||Environment.Variables.Order[i].COLNAME||'>';
			SET i= i+1;
		END WHILE;
		
		--20条记录结尾
		IF RecordCount = 20 THEN
			SET XMLOriginal = XMLOriginal||'</Root>';
			SET XMLNew = XMLNew||'</Root>';
			
			--XML消息插入数据库
			
		END IF;
		
		RETURN FALSE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;


CREATE COMPUTE MODULE txtTest2_Compute1
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		--不满20条记录的情况
		IF RecordCount < 20 THEN
			SET XMLOriginal = XMLOriginal||'</Root>';
			SET XMLNew = XMLNew||'</Root>';
			
			--XML消息插入数据库
		END IF;
		
		--初始化全局变量
		SET XMLOriginal = '<Root>';
		SET XMLNew = '<Root>';
		SET RecordCount = 0;
		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
