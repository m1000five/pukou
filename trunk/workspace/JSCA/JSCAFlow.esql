

CREATE COMPUTE MODULE JSCAFlow_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		
		-- Get Data From AT1
		DECLARE i INTEGER 1;
				
		SET Environment.Variables.AT1.Record[] = (SELECT AT1.id, AT1.InFileName, AT1.InFileNo, AT1.zzjgdm, AT1.UnitName, AT1.StartTime, AT1.EndTime, AT1.Cash, AT1.PeopleName, AT1.CerType, AT1.OutXMLFileName FROM Database.AT1 AS AT1 WHERE AT1.StartTime > '2006-01-01');
		
		-- SET RecordCount = CARDINALITY(Environment.Variables.AT1.Record[]);
		
		FOR source AS Environment.Variables.AT1.Record[] DO
			SET OutputRoot.XMLNSC.AT1.Record[i] = Environment.Variables.AT1.Record[i];
			SET i = i + 1;
		END FOR;
				
					
		DECLARE j INTEGER CARDINALITY(OutputRoot.XMLNSC.AT1.Record[]); 
				
			SET Environment.TIME1 = CURRENT_TIMESTAMP;
			SET Environment.TYPE1 = '信息';
			SET Environment.PROCESS1 = '流程1';
			SET Environment.FILE1 = '';
			SET Environment.AUDIT1 = '';
			SET Environment.NOTES1 = '文件读取开始';	
			SET Environment.TIMEN = CURRENT_TIMESTAMP;
			SET Environment.Variables.TYPEN = '信息';
			SET Environment.Variables.PROCESSN = '流程1';
			SET Environment.Variables.FILEN = '';
			SET Environment.Variables.AUDITN = '总数:'||CAST(0 AS CHARACTER)||
														' 正确：'||CAST(0 AS CHARACTER)||
														' 错误：'||CAST(0 AS CHARACTER);
			SET Environment.Variables.NOTESN = '文件读取结束';		
		
	
	    IF j <> 0 THEN
	    	SET Environment.FILE1 = OutputRoot.XMLNSC.AT1.Record[1].InFileName;
			SET Environment.TIMEN = CURRENT_TIMESTAMP;
			SET Environment.TYPEN = '信息';
			SET Environment.PROCESSN = '流程1';
			SET Environment.FILEN = OutputRoot.XMLNSC.AT1.Record[j].InFileName;
			SET Environment.AUDITN = '总数:'||CAST(j AS CHARACTER)||
														' 正确：'||CAST(j AS CHARACTER)||
														' 错误：'||CAST(0 AS CHARACTER);
			SET Environment.NOTESN = '文件读取结束';	
			
	    END IF;
									
		RETURN TRUE;
	END;	

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
	
	
END MODULE;
